# hardware independent tests

TARGET := test

TESTSRCDIR := ./src
SRCDIR := ../src
BUILDDIR := ./build
SCRIPTDIR := ../scripts

LIBDIR := ./library

INCDIR := ../src/kernel/include
INCDIR += ../src/hal/include
INCDIR += ../src/library/include
INCDIR += ./src/include
LIBINCDIR := ./library/include
INCDIR += $(LIBINCDIR)

INCFLAGS = $(addprefix -I,$(INCDIR))
LIBFLAGS = $(addprefix -L,$(LIBDIR))

TEST_SRCS := $(shell find $(TESTSRCDIR) -type f -name "*.cpp")
TEST_OBJS := $(addprefix $(BUILDDIR)/, $(addsuffix .o, $(basename $(TEST_SRCS:$(TESTSRCDIR)/%=%))))

# SRCS := $(SRCDIR)/kernel/capability/capability_node.cpp $(SRCDIR)/kernel/utility/logger.cpp $(SRCDIR)/kernel/utility/print.cpp
SRCS := $(shell find $(SRCDIR) -type f -name "*.cpp" | grep -E -v -e "main.cpp" -e "*/hal/*")
OBJS := $(addprefix $(BUILDDIR)/, $(addsuffix .o, $(basename $(SRCS:$(SRCDIR)/%=%))))

DEPS = $(TEST_OBJS:.o=.d)
DEPS += $(OBJS:.o=.d)

$(info $(TEST_SRCS))
$(info $(SRCS))

CXX = clang++-16
CXXFLAGS = -std=c++20 -O2 -Wall -Wextra -frelaxed-template-template-args -stdlib=libc++
CXXTESTFLAGS = -pthread -lgtest_main -lgtest -lgmock_main -lgmock -stdlib=libc++

CPPFLAGS = $(INCFLAGS) -MMD -MP

LD := ld.lld
LDFLAGS := 

.PHONY: all clean

all: executable

executable: $(BUILDDIR)/$(TARGET)

$(BUILDDIR)/$(TARGET): $(TEST_OBJS) $(OBJS)
	mkdir -p $(dir $@)
	$(LD) $(LDFLAGS) $(LIBFLAGS) $^ -o $@
#	$(LD) $(LDFLAGS) $(CPPFLAGS) $(LIBFLAGS) $(CXXTESTFLAGS) $^ -o $@
#	$(LD) $(LDFLAGS) -o $@ $(OBJS)

$(BUILDDIR)/%.o: $(TESTSRCDIR)/%.cpp
	mkdir -p $(dir $@)
	$(CXX) $(CXXFLAGS) $(CXXTESTFLAGS) (CPPFLAGS) -c $< -o $@

$(BUILDDIR)/%.o: $(SRCDIR)/%.cpp
	mkdir -p $(dir $@)
	$(CXX) $(CXXFLAGS) $(CXXTESTFLAGS) $(CPPFLAGS) -c $< -o $@

clean:
	rm -rf $(BUILDDIR)/*

-include $(DEPS)


